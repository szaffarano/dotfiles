#!/bin/bash

GOSETUP=$HOME/.local/go
BASE_URL="https://dl.google.com/go/"
VERSION="$(curl https://golang.org/VERSION?m=text)"
ARCH="amd64"

if [[ "$OSTYPE" == "linux-gnu" ]]; then
    OS="linux"
elif [[ "$OSTYPE" == "darwin"* ]]; then
    OS="darwin"
else
    echo >&2 "Unable to install golang, nsupported OS"
    exit 1
fi

curl -L "$BASE_URL/$VERSION.$OS-$ARCH.tar.gz" -o /tmp/go.tar.gz \
    && rm -rf $GOPATH \
    && tar -C $HOME/.local -xzf /tmp/go.tar.gz \
    && rm /tmp/gol.tar.gz


PIP_PKGS=
function addPipIfNotInstalled {
  if [ $(pip list 2>/dev/null | grep $1 | wc -l) -eq 0 ]; then
    PIP_PKGS="$PIP_PKGS $1"
  fi
}

export PATH="$HOME/.local/anaconda3/bin:$PATH"
if ! $(which conda 2> /dev/null 1>&2); then
  echo "Installing miniconda"
  curl -LO https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    chmod 775 ./Miniconda3-latest-Linux-x86_64.sh && \
    ./Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/.local/anaconda3
  trap "{ rm -f ./Miniconda3-latest-Linux-x86_64.sh; }" EXIT
fi

echo "Pip: $(which pip)"
addPipIfNotInstalled "tasklib"
addPipIfNotInstalled "proselint"
addPipIfNotInstalled "black"
addPipIfNotInstalled "flake8"
addPipIfNotInstalled "vim-vint"
addPipIfNotInstalled "yamllint"

if [ -n "$PIP_PKGS" ]; then
  echo "installing packages $PIP_PKGS"
  pip install $PIP_PKGS
fi
