set nocompatible
filetype plugin on
syntax on

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

  augroup vimplug_installed
    autocmd!
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
  augroup END
endif

" install plugins
call plug#begin('~/.vim/plugged')
source ~/.vim/plugins.vim
call plug#end()

" edit and reload vimrc
nnoremap <silent> <leader>ev :vsplit $MYVIMRC<CR>
nnoremap <silent> <leader>ep :vsplit ~/.vim/plugins.vim<CR>
nnoremap <silent> <leader>sv :so $MYVIMRC<CR>

" set hidden: can switch between buffers without save first the current one
set hidden

" tabs are two spaces
set tabstop=2
set expandtab
set shiftwidth=2
set softtabstop=2

" only ignore case when the search pattern is all lowercase
set ignorecase
set smartcase

" highlight search matches
set hlsearch

" incremental searchs
set incsearch

" show matching parenthesis, brackets, curly brackets, etc.
set showmatch

" english and spanish spelling
set spelllang=es,en

" ruler at 110 chars
set textwidth=110
set colorcolumn=+1

" autocomplete with ctrl-P in insert mode
set complete+=kspell

" print line numbers relative to current line
set relativenumber

" toggle paste mode
set pastetoggle=<leader>p

set splitbelow
set splitright
set visualbell
set noerrorbells

" save me of pressing the shift key
nnoremap ; :

" more natural to move around long lines
noremap j gj
noremap k gk

" clear matched search
nnoremap <leader><space>  :noh<CR>

" open the same file in another window
nnoremap <leader>w        <C-w>v<C-w>l

" move between tabs
noremap th  :tabfirst<CR>
noremap tj  :tabnext<CR>
noremap tk  :tabprev<CR>
noremap tl  :tablast<CR>
noremap tt  :tabedit<Space>
noremap tn  :tabnext<Space>
noremap tm  :tabm<Space>
noremap td  :tabclose<CR>

" move between windows without use <C-w>
noremap <C-h>            <C-w>h
noremap <C-j>            <C-w>j
noremap <C-k>            <C-w>k
noremap <C-l>            <C-w>l

" switch to normal mode
inoremap jk <ESC>l

inoremap <silent> <C-d> <esc>ddi

" uppercase the current world
inoremap <silent> <C-u> <esc>viwUi
noremap  <silent> <C-u> viwUn

" go to the beggining and the end of the current line
nnoremap <silent> H 0
nnoremap <silent> L $

augroup files_customization
  autocmd!
  autocmd FileType vimwiki set syntax=pandoc
  autocmd FocusLost * :wa
  autocmd BufRead,BufNewFile *.md     setlocal spell
  autocmd User GnuPG set syntax=pandoc
augroup END

" ### pandoc ###
let g:pandoc#spell#default_langs = ['en', 'es']
let g:pandoc#filetypes#handled = ['pandoc', 'markdown', 'textile', 'rst']
let g:pandoc#syntax#conceal#urls = 0
let g:pandoc#syntax#codeblocks#embeds#langs = ['python','java','scala','sh', 'c', 'sql']

" ### GPG ###
let g:GPGPreferArmor = 1

" ### base16 ###
if filereadable(expand('~/.vimrc_background'))
  let g:base16colorspace=256
  source ~/.vimrc_background
endif

" ### airline ###
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts      = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline_theme      = 'base16'

" ### NERDTree ###
noremap <C-n> :NERDTreeToggle<CR>

" ### gnupg
let g:GPGDefaultRecipients = ['sebas@zaffarano.com.ar']

" ### Vimwiki config ###
let g:wiki           = {}
let g:wiki.path      = '~/.wiki/'
let g:wiki.syntax    = 'markdown'
let g:wiki.ext       = '.md'
let g:wiki.auto_tags = 1
let g:vimwiki_list          = [g:wiki]
let g:vimwiki_conceallevel  = 0
" let g:vimwiki_menu = 'Vimwiki'
let g:vimwiki_use_calendar = 1

" ### ALE ###
let g:ale_completion_enabled = 1

" ### Lint ###
let g:ale_vim_vint_executable = expand('~/.local/anaconda3/bin/vint')
let g:ale_vim_vint_use_global = 1

" ### scalastyle ###
let g:ale_scalastyle_config_loc = expand('~/.scalastyle-config.xml')

" ### nerdcomment ###
let g:NERDSpaceDelims = 1
let g:NERDCommentEmptyLines = 1
let g:NERDTrimTrailingWhitespace = 1

" ### vim-autoformat ###
noremap <silent> <C-f> :Autoformat<cr>:RemoveTrailingSpaces<cr>

" ### tagbar ###
nmap <F8> :TagbarToggle<CR>
let g:tagbar_type_vimwiki = {
          \   'ctagstype':'vimwiki'
          \ , 'kinds':['h:header']
          \ , 'sro':'&&&'
          \ , 'kind2scope':{'h':'header'}
          \ , 'sort':0
          \ , 'ctagsbin':'~/.dotfiles/bin/vwtags.py'
          \ , 'ctagsargs': 'markdown'
          \ }

" spellcheck highlights
highlight clear SpellBad
highlight clear SpellCap
highlight SpellBad cterm=underline ctermfg=red
highlight SpellCap cterm=underline ctermfg=green


