#!/usr/bin/env bash

read -r -d '' USAGE <<EOM
$(basename "$0") creates a jar file based on a list of classes

Usage:
    $(basename "$0") <dest> <class names>

    Example:

    $(basename "$0") some.jar a/b/c/Class x/y/z/AnotherClass

EOM
export USAGE

BASE=$(
	cd "$(dirname "$0")" || exit
	pwd
)

# shellcheck source=/dev/null
source "$BASE/common.sh"

checkParamsAtLeast $# 2

classes=("${@:2}")

output=$(realpath "$1")

modules=$(mktemp)
pivot=$(mktemp -d)

trap '{ rm "$modules";   }' EXIT
trap '{ rm -rf "$pivot"; }' EXIT

for c in "${classes[@]}"; do
	find . -type f -name "$(basename "$c").class"
done | grep -v test |
	sed -E -e s'/^(.*)\/target\/classes.*$/\1/g' -e s'/^src\/.*$/./g' |
	sort -u >"$modules"

cat "$modules"

while read -r m; do
	if ! [[ -d "$m" ]]; then
		continue
	fi

	echo "collecting files in $m ..."

	pushd "$m/target/classes" || die "$m/target/classes not found" 3

	for f in "${classes[@]}"; do
		d=$(dirname "$f")
		p=$(basename "$f")
		mkdir -p "$pivot/$d"
		[[ -d "$d" ]] && find "$d" -name "$p.class" -exec cp {} "$pivot/$d" \;
		[[ -d "$d" ]] && find "$d" -name "$p\$*.class" -exec cp {} "$pivot/$d" \;
	done

	popd || exit
done <"$modules"

pushd "$pivot" || die "Error entering into pivot directory"

jar cvf "$output" .

popd || die "Error returning back to WD"
